
- name: Set up yum to use proxy and various packages we always want
  hosts: all
  sudo: true

  tasks:
    - lineinfile: dest=/etc/yum.conf       create=no state=present line=proxy=http://130.238.7.178:3128/
    - lineinfile: dest=/etc/timezone       create=yes state=present line=Europe/Stockholm
    - shell: echo centos:centos | chpasswd
    - shell: echo root:centos | chpasswd
    - yum: state=latest name=lsof
    - yum: state=latest name=strace
    - yum: state=present name=https://dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm
    - yum: state=latest name=jq
    - yum: state=latest name=tcpdump

- name: Set up hosts info
  hosts: all
  sudo: true

  tasks:
    - lineinfile: dest=/etc/hosts      create=no state=present line='172.25.8.3 openstack-controller tos1'
    - lineinfile: dest=/etc/hosts      create=no state=present line='172.25.8.5 filsluss'
    - lineinfile: dest=/etc/hosts      create=no state=present line='172.25.8.4 thinlinc-master'
    - lineinfile: dest=/etc/hosts      create=no state=present line='172.25.8.6 supernode tsn'
    - lineinfile: dest=/etc/hosts      create=no state=present line='172.25.8.7 compute1'
    - lineinfile: dest=/etc/hosts      create=no state=present line='172.25.8.8 compute2'
    - lineinfile: dest=/etc/hosts      create=no state=present line='172.25.8.9 compute3'
    - lineinfile: dest=/etc/hosts      create=no state=present line='172.25.8.10 hnas-emulation'
    - lineinfile: dest=/etc/hosts      create=no state=present line='172.25.8.11 ldap'

- name: NFS Support
  hosts: supernode:filsluss:hnas-emulation
  sudo: true
  tasks:
     -yum state=latest name=nfs-utils

- name: LDAP
  hosts: ldap
  sudo: true
  tasks:
    - yum: state=present name=openldap-servers
    - yum: state=present name=openldap-clients
    - lineinfile: dest=/etc/sysconfig/iptables state=present line='-A INPUT -m state --state NEW -m tcp -p tcp --dport 389 -j ACCEPT' insertbefore='^-A INPUT -m state --state NEW .*'
    - copy:   src={{ lookup('env','HOME') }}/mosler-micro-mosler/configs/ldap_helper.sh dest=/root/ldap_helper.sh
   
    - action: shell chmod a+x /root/ldap_helper.sh
    - action: shell /root/ldap_helper.sh
     


- name: OpenStack packages and more
  hosts: openstack-controller:supernode:compute:networking-node
  sudo: true
  tasks:
    - yum: state=present name=https://repos.fedorapeople.org/repos/openstack/EOL/openstack-icehouse/rdo-release-icehouse-4.noarch.rpm
    - lineinfile: dest=/etc/yum.repos.d/rdo-release.repo regexp='^(.*)openstack/openstack-icehouse/(.*)$' line='\1openstack/EOL/openstack-icehouse/\2' backrefs=yes
    - name: upgrade all packages
      yum: name=* state=latest
    - yum: name=python-novaclient state=latest
    - yum: name=python-keystoneclient state=latest
    - yum: name=python-neutronclient state=latest
    - yum: name=python-glanceclient state=latest
    - yum: name=python-heatclient state=latest
    - yum: name=python-neutronclient state=latest
    - yum: state=present name=openstack-nova
    - yum: state=present name=openstack-neutron-ml2
    - yum: state=present name=openstack-neutron-openvswitch
    - service: name=openvswitch state=started
    - lineinfile: dest=/etc/sysconfig/iptables state=present line='-A INPUT -m state --state NEW -s 172.25.8.0/24 -j ACCEPT' insertbefore='^-A INPUT -m state --state NEW .*'
    - service: name=iptables state=restarted

    - copy: src={{ lookup('env','HOME') }}/mosler-micro-mosler/configs/keystonerc dest=/root/.keystonerc
# Supernode needs to reach everywhere
    - copy: src={{ lookup('env','HOME') }}/.ssh/id_rsa dest=/root/.ssh/id_rsa



- name: Controller specials
  hosts: openstack-controller
  sudo: true
  tasks:
    - copy:   src={{ lookup('env','HOME') }}/misc/ dest=/tmp/misc/
    - file: path=/root/bin state=directory
    - yum: state=present name=/tmp/misc/Django14-1.4.21-1.el6.noarch.rpm
    - yum: state=present name=openstack-dashboard
    - yum: state=present name=openstack-neutron
    - yum: state=present name=openstack-keystone
    - yum: state=present name=openstack-heat-engine
    - yum: state=present name=openstack-heat-api
    - yum: state=present name=openstack-heat-api-cfn
    - yum: state=present name=openstack-nova
    - yum: state=present name=openstack-glance
    - yum: state=present name=openstack-neutron-ml2
    - yum: state=present name=openstack-neutron-openvswitch
    - yum: state=present name=mysql-server
    - yum: state=present name=memcached
    - yum: state=present name=rabbitmq-server
    
    - yum: state=present name=/tmp/misc/mosler-dashboard-2-5.i386.rpm
    - yum: state=present name=/tmp/misc/nginx-1.8.1-1.el6.ngx.x86_64.rpm
    - copy:   src={{ lookup('env','HOME') }}/mosler-micro-mosler/configs/neutron.conf dest=/etc/neutron/neutron.conf
    - copy:   src={{ lookup('env','HOME') }}/mosler-micro-mosler/configs/keystone.conf dest=/etc/keystone/keystone.conf
    - copy:   src={{ lookup('env','HOME') }}/mosler-micro-mosler/configs/plugin.ini dest=/etc/neutron/plugin.ini
    - copy:   src={{ lookup('env','HOME') }}/mosler-micro-mosler/configs/ml2.ini dest=/etc/neutron/plugins/ml2/ml2.ini
    - copy:   src={{ lookup('env','HOME') }}/mosler-micro-mosler/configs/ovs_neutron_plugin.ini dest=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini
    - copy:   src={{ lookup('env','HOME') }}/mosler-micro-mosler/configs/nova.conf dest=/etc/nova/nova.conf
    - copy:   src={{ lookup('env','HOME') }}/mosler-micro-mosler/configs/glance-api.conf dest=/etc/glance/glance-api.conf
    - copy:   src={{ lookup('env','HOME') }}/mosler-micro-mosler/configs/glance-registry.conf dest=/etc/glance/glance-registry.conf
    - copy:   src={{ lookup('env','HOME') }}/mosler-micro-mosler/configs/heat.conf dest=/etc/heat/heat.conf
    - copy:   src={{ lookup('env','HOME') }}/mosler-micro-mosler/configs/local_settings dest=/etc/openstack-dashboard/local_settings
    - copy:   src={{ lookup('env','HOME') }}/mosler-micro-mosler/configs/openstack_helper.sh dest=/root/bin/openstack_helper.sh mode=0755
   
    - shell: /root/bin/openstack_helper.sh  2>/tmp/oserr >/tmp/osout
    - copy:   src={{ lookup('env','HOME') }}/mosler-images/project-computenode-stable dest=/tmp/mosler-images/
    - shell: . /root/.keystonerc && glance image-create --file /tmp/mosler-images/project-computenode-stable --disk-format qcow2 --container-format bare  --name "project-computenode-stable" --is-public True  
    - shell: rm /tmp/mosler-images/project-computenode-stable
    - copy:   src={{ lookup('env','HOME') }}/mosler-images/project-loginnode-stable dest=/tmp/mosler-images/
    - shell: . /root/.keystonerc && glance image-create --file /tmp/mosler-images/project-loginnode-stable --disk-format qcow2 --container-format bare  --name "project-loginnode-stable" --is-public True  
    - shell: rm /tmp/mosler-images/project-loginnode-stable
    - copy:   src={{ lookup('env','HOME') }}/mosler-images/topolino-q-stable dest=/tmp/mosler-images/
    - shell: . /root/.keystonerc && glance image-create --file /tmp/mosler-images/topolino-q-stable --disk-format qcow2 --container-format bare  --name "topolino-q-stable" --is-public True  
    - shell: rm /tmp/mosler-images/topolino-q-stable


- name: OpenStack networking
  hosts: networking-node
  sudo: true
  tasks:
    - name: Network set up
      yum: state=present name=openstack-neutron
    - yum: state=present name=openstack-neutron-ml2
    - yum: state=present name=openstack-neutron-openvswitch
    - lineinfile: dest=/etc/sysctl.conf regexp='^\s*net.ipv4.ip_forward\s*=.*$' line='net.ipv4.ip_forward=1'
    - lineinfile: dest=/etc/sysctl.conf regexp='^\s*net.ipv4.conf.all.rp_filter\s*=.*$' line='net.ipv4.conf.all.rp_filter=0'
    - lineinfile: dest=/etc/sysctl.conf regexp='^\s*net.ipv4.conf.default.rp_filter\s*=.*$' line='net.ipv4.conf.default.rp_filter=0'
    - lineinfile: dest=/etc/sysctl.conf regexp='^\s*net.bridge.bridge-nf-call-arptables\s*=.*$' line='net.bridge.bridge-nf-call-arptables=1'
    - lineinfile: dest=/etc/sysctl.conf regexp='^\s*net.bridge.bridge-nf-call-iptables\s*=.*$' line='net.bridge.bridge-nf-call-iptables=1'
    - lineinfile: dest=/etc/sysctl.conf regexp='^\s*net.bridge.bridge-nf-call-ip6tables\s*=.*$' line='net.bridge.bridge-nf-call-ip6tables=1'
    - copy:   src={{ lookup('env','HOME') }}/mosler-micro-mosler/configs/neutron.conf dest=/etc/neutron/neutron.conf
    - copy:   src={{ lookup('env','HOME') }}/mosler-micro-mosler/configs/plugin.ini dest=/etc/neutron/plugin.ini
    - copy:   src={{ lookup('env','HOME') }}/mosler-micro-mosler/configs/ml2.ini dest=/etc/neutron/plugins/ml2/ml2.ini
    - copy:   src={{ lookup('env','HOME') }}/mosler-micro-mosler/configs/ovs_neutron_plugin.ini dest=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini
    - service: name=openvswitch enabled=yes state=started
    - shell: ovs-vsctl add-br br-eth1 || true
    - shell: ovs-vsctl add-port br-eth1 eth1|| true
    - service: name=neutron-dhcp-agent enabled=yes state=started
    - service: name=neutron-l3-agent enabled=yes state=started
    - service: name=neutron-openvswitch-agent enabled=yes state=started
    - service: name=neutron-metadata-agent enabled=yes state=started
    - service: name=neutron-ovs-cleanup enabled=yes state=started
    - name: restart machine
      command: shutdown -r now "Ansible updates triggered"
      async: 0
      poll: 0
      ignore_errors: true
    - name: waiting for server to come back
      local_action: wait_for host={{ inventory_hostname }}
        state=started
      sudo: false

- name: OpenStack compute
  hosts: compute
  sudo: true
  tasks:
    - name: Packages for compute
      yum: state=present name=openstack-neutron
    - yum: state=present name=openstack-neutron-ml2
    - yum: state=present name=openstack-neutron-openvswitch
    - yum: state=present name=openstack-nova
    - lineinfile: dest=/etc/sysctl.conf regexp='^\s*net.ipv4.ip_forward\s*=.*$' line='net.ipv4.ip_forward=1'
    - lineinfile: dest=/etc/sysctl.conf regexp='^\s*net.ipv4.conf.all.rp_filter\s*=.*$' line='net.ipv4.conf.all.rp_filter=0'
    - lineinfile: dest=/etc/sysctl.conf regexp='^\s*net.ipv4.conf.default.rp_filter\s*=.*$' line='net.ipv4.conf.default.rp_filter=0'
    - lineinfile: dest=/etc/sysctl.conf regexp='^\s*net.bridge.bridge-nf-call-arptables\s*=.*$' line='net.bridge.bridge-nf-call-arptables=1'
    - lineinfile: dest=/etc/sysctl.conf regexp='^\s*net.bridge.bridge-nf-call-iptables\s*=.*$' line='net.bridge.bridge-nf-call-iptables=1'
    - lineinfile: dest=/etc/sysctl.conf regexp='^\s*net.bridge.bridge-nf-call-ip6tables\s*=.*$' line='net.bridge.bridge-nf-call-ip6tables=1'
    - shell: ovs-vsctl add-br br-eth1 || true
    - shell: ovs-vsctl add-port br-eth1 eth1|| true
    - copy:   src={{ lookup('env','HOME') }}/mosler-micro-mosler/configs/neutron.conf dest=/etc/neutron/neutron.conf
    - copy:   src={{ lookup('env','HOME') }}/mosler-micro-mosler/configs/plugin.ini dest=/etc/neutron/plugin.ini
    - copy:   src={{ lookup('env','HOME') }}/mosler-micro-mosler/configs/ml2.ini dest=/etc/neutron/plugins/ml2/ml2.ini
    - copy:   src={{ lookup('env','HOME') }}/mosler-micro-mosler/configs/ovs_neutron_plugin.ini dest=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini
    - copy:   src={{ lookup('env','HOME') }}/mosler-micro-mosler/configs/nova.conf dest=/etc/nova/nova.conf
    - service: name=openvswitch enabled=yes
    - service: name=neutron-openvswitch-agent enabled=yes 
    - service: name=openstack-nova-compute enabled=yes
    - name: restart machine
      command: shutdown -r now "Ansible updates triggered"
      async: 0
      poll: 0
      ignore_errors: true
    - name: waiting for server to come back
      local_action: wait_for host={{ inventory_hostname }}
        state=started
      sudo: false




- name: Supernode 
  hosts: supernode
  sudo: true
  tasks:
    - name: Copy files to supernode
      copy:  src={{ lookup('env','HOME') }}/mosler-system-scripts/supernode/fix_proj.sh dest=/usr/local/bin/
    - copy:  src={{ lookup('env','HOME') }}/mosler-system-scripts/supernode/import_user dest=/usr/local/bin/
    - copy:  src={{ lookup('env','HOME') }}/mosler-system-scripts/supernode/passwd_line dest=/usr/local/bin/
    - copy:  src={{ lookup('env','HOME') }}/mosler-system-scripts/supernode/queue_responder dest=/usr/local/bin/
    - copy:  src={{ lookup('env','HOME') }}/mosler-system-scripts/supernode/remove_stack.sh dest=/usr/local/bin/
    - copy:  src={{ lookup('env','HOME') }}/mosler-system-scripts/supernode/sync_exporters dest=/usr/local/bin/
    - copy:  src={{ lookup('env','HOME') }}/mosler-system-scripts/supernode/sync_grantfile dest=/usr/local/bin/
    - copy:  src={{ lookup('env','HOME') }}/mosler-system-scripts/supernode/tenant-valid dest=/usr/local/bin/
    - copy:  src={{ lookup('env','HOME') }}/mosler-system-scripts/supernode/uppmax-links.sh dest=/usr/local/bin/
    - copy:  src={{ lookup('env','HOME') }}/mosler-system-scripts/supernode/uppmax-sync.sh dest=/usr/local/bin/

    - copy:  src={{ lookup('env','HOME') }}/mosler-system-scripts/supernode/project_gid dest=/usr/local/sbin/ mode=0755
    - copy:  src={{ lookup('env','HOME') }}/mosler-system-scripts/supernode/project_ips dest=/usr/local/sbin/ mode=0755
    - copy:  src={{ lookup('env','HOME') }}/mosler-system-scripts/supernode/project_members dest=/usr/local/sbin/ mode=0755
    - copy:  src={{ lookup('env','HOME') }}/mosler-system-scripts/supernode/refreshimage dest=/usr/local/sbin/ mode=0755
    - copy:  src={{ lookup('env','HOME') }}/mosler-system-scripts/supernode/setup_homedir.sh dest=/usr/local/sbin/ mode=0755
    - copy:  src={{ lookup('env','HOME') }}/mosler-system-scripts/supernode/thinlinc_proj_setup dest=/usr/local/sbin/ mode=0755

    - copy:  src={{ lookup('env','HOME') }}/mosler-system-scripts/supernode/create_project.sh dest=/usr/local/bin/ mode=0755
    - copy:  src={{ lookup('env','HOME') }}/mosler-system-scripts/supernode/create_heat_template.sh dest=/usr/local/bin/ mode=0755
    - copy:  src={{ lookup('env','HOME') }}/mosler-system-scripts/supernode/create_omd_config.sh dest=/usr/local/bin/ mode=0755
    - copy:  src={{ lookup('env','HOME') }}/mosler-system-scripts/supernode/get_vlan.sh dest=/usr/local/bin/ mode=0755
    - copy:  src={{ lookup('env','HOME') }}/mosler-system-scripts/supernode/heat_add_compute.sh dest=/usr/local/bin/ mode=0755

    - copy:  src={{ lookup('env','HOME') }}/mosler-micro-mosler/configs/create_nfs_share.sh dest=/usr/local/bin/ mode=0755
    - copy:  src={{ lookup('env','HOME') }}/mosler-micro-mosler/configs/nfs_san_check.sh dest=/usr/local/bin/ mode=0755

    - file: path=/root/bin state=directory
 
    - copy:  src={{ lookup('env','HOME') }}/mosler-micro-mosler/configs/public-net-helper.sh dest=/root/bin/ mode=0755

    - file: path=/usr/local/heat state=directory
 
    - copy:  src={{ lookup('env','HOME') }}/mosler-micro-mosler/configs/mosler-template-resources-private_net-only dest=/usr/local/heat/ mode=0755
    - copy:  src={{ lookup('env','HOME') }}/mosler-micro-mosler/configs/mosler-template-resources-network dest=/usr/local/heat/ mode=0755
    - copy:  src={{ lookup('env','HOME') }}/mosler-micro-mosler/configs/mosler-template-resources-secgroups dest=/usr/local/heat/ mode=0755
    - copy:  src={{ lookup('env','HOME') }}/mosler-micro-mosler/configs/mosler-template-resources-loginnode dest=/usr/local/heat/ mode=0755
    - copy:  src={{ lookup('env','HOME') }}/mosler-micro-mosler/configs/mosler-template-resources-servicenode dest=/usr/local/heat/ mode=0755
    - copy:  src={{ lookup('env','HOME') }}/mosler-micro-mosler/configs/mosler-template-parameters dest=/usr/local/heat/ mode=0755

    - shell: /root/bin/public-net-helper.sh

- name: ThinLinc
  hosts: thinlinc-master
  sudo: true
  tasks:
    - copy:  src={{ lookup('env','HOME') }}/thinlinc/ dest=/tmp/tl/
    - copy:  src={{ lookup('env','HOME') }}/mosler-micro-mosler/configs/tl_answers dest=/tmp/tl/
    - shell: yum -y install /tmp/tl/*x86_64.rpm /tmp/tl/*noarch.rpm || true
    - shell: /opt/thinlinc/sbin/tl-setup -a /tmp/tl/tl_answers || true
    - lineinfile: dest=/opt/thinlinc/etc/conf.d/webaccess.hconf regexp='^listen=.*$' line='listen=443'

 


