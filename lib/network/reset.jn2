# -*-sh-*-

# iptables
sed -i "/^-A INPUT -m state --state NEW -s {{ env['MGMT_CIDR']|replace('/','\/') }} -j ACCEPT/ d" /etc/sysconfig/iptables
sed -i "/^-A INPUT -m state --state NEW -s {{ env['MOSLER_EXT_CIDR']|replace('/','\/') }} -j ACCEPT/ d" /etc/sysconfig/iptables
service iptables stop || true
service iptables start

for f in ifcfg route rule
do
    # cp is 'cp -i', so I call /bin/cp
    [ -e /etc/sysconfig/network-scripts/org/${f}-eth1 ] && /bin/cp -f /etc/sysconfig/network-scripts/org/${f}-eth1 /etc/sysconfig/network-scripts/${f}-eth1
    rm -f /etc/sysconfig/network-scripts/${f}-br-eth1
done

# OpenVSwitch
ovs-vsctl del-br br-eth1 || true
ovs-vsctl del-br br-int || true
ovs-vsctl emer-reset
service openvswitch stop
chkconfig openvswitch off

ip rule del from {{ env['MGMT_CIDR'] }} lookup mgmt || true
ip rule del to {{ env['MGMT_CIDR'] }} lookup mgmt || true

ip rule del from {{ env['DATA_CIDR'] }} lookup data || true
ip rule del to {{ env['DATA_CIDR'] }} lookup data || true

ip rule del from {{ env['MOSLER_EXT_CIDR'] }} lookup ext || true
ip rule del to {{ env['MOSLER_EXT_CIDR'] }} lookup ext || true

service network restart

# Starting Neutron services
{% set services = [ 'dhcp-agent',
		    'l3-agent',
		    'openvswitch-agent',
		    'metadata-agent',
		    'ovs-cleanup'
] -%}
{% for service in services %}
chkconfig neutron-{{ service }} off
if service neutron-{{ service }} status; then
    service neutron-{{ service }} stop
fi
{% endfor %}

# Cleaning the logs
rm -f /var/log/neutron/{dhcp-agent,l3-agent,metadata-agent,openvswitch-agent}.log
rm -f /var/log/neutron/neutron-ns-metadata-proxy-*

rm -rf /var/lib/neutron/dhcp/*

# Cleaning old namespaces
pkill dnsmasq || true
ps ax | awk '/neutron-ns-metadata-proxy/ {print $1}' | while read pid; do
    kill -9 $pid
done

sleep 5
ip netns | while read ns; do ip netns del $ns; done
