# -*-sh-*-

#############################################################
# On CentOS, the extras repository provides the RPM that enables the
# OpenStack repository. CentOS includes the extras repository by
# default, so you can simply install the package to enable the
# OpenStack repository.
yum -y install centos-release-openstack-mitaka

yum -y upgrade

yum -y install nc nmap tcpdump chrony iptables-services mariadb mariadb-server python2-PyMySQL rabbitmq-server memcached python-memcached


#############################################################
# Openstack Components
yum -y install openstack-utils python-openstackclient openstack-keystone httpd mod_wsgi openstack-dashboard openstack-glance \
openstack-nova-api openstack-nova-conductor openstack-nova-console openstack-nova-novncproxy openstack-nova-scheduler
#yum -y install openstack-selinux

#############################################################
## Ditch firewalld and use iptables
# systemctl disable firewalld
# systemctl stop firewalld
# systemctl mask firewalld

systemctl enable iptables

# echo "Copying config files"
rsync -a --no-perms {{ env['VAULT'] }}/admin.rc                 /root/admin.rc
chmod 600 /root/admin.rc
rsync -a --no-perms {{ env['VAULT'] }}/demo.rc                  /root/demo.rc
chmod 600 /root/demo.rc

rsync -a --no-perms {{ env['VAULT'] }}/keystone.conf            /etc/keystone/keystone.conf
chown keystone:keystone /etc/keystone/keystone.conf
chmod 644 /etc/keystone/keystone.conf

rsync -a --no-perms {{ env['VAULT'] }}/wsgi-keystone.conf       /etc/httpd/conf.d/wsgi-keystone.conf
chown root:root /etc/httpd/conf.d/wsgi-keystone.conf
chmod 644 /etc/httpd/conf.d/wsgi-keystone.conf

rsync -a --no-perms {{ env['VAULT'] }}/nova.conf                /etc/nova/nova.conf
chown nova:nova /etc/nova/nova.conf
chmod 644 /etc/nova/nova.conf

rsync -a --no-perms {{ env['VAULT'] }}/glance-api.conf          /etc/glance/glance-api.conf
chown glance:glance /etc/glance/glance-api.conf
chmod 644 /etc/glance/glance-api.conf

rsync -a --no-perms {{ env['VAULT'] }}/glance-registry.conf     /etc/glance/glance-registry.conf
chown glance:glance /etc/glance/glance-registry.conf
chmod 644 /etc/glance/glance-registry.conf

# rsync -a --no-perms {{ env['VAULT'] }}/local_settings           /etc/openstack-dashboard/local_settings

# rsync -a --no-perms {{ env['VAULT'] }}/map_thinlinc_nginx       /usr/local/sbin/map_thinlinc_nginx
# chown root:root /usr/local/sbin/map_thinlinc_nginx
# chmod 755 /usr/local/sbin/map_thinlinc_nginx

# rsync -a --no-perms {{ env['VAULT'] }}/nginx_tl_template.conf   /usr/local/etc/nginx_tl_template.conf
# chown root:root /usr/local/etc/nginx_tl_template.conf
# chmod 644 /usr/local/etc/nginx_tl_template.conf


# declare -a FILES
# FILES=('/etc/sysconfig/iptables' \
#        '/etc/selinux/config' \
#        '/etc/chrony.conf' \
#        '/etc/sysconfig/network-scripts/route-eth0' \
#        '/etc/sysconfig/network-scripts/rule-eth0' \
#        '/etc/sysctl.conf' \
#        '/etc/nova/nova.conf' \
#        '/etc/keystone/keystone.conf' \
#        '/etc/keystone/keystone-paste.ini' \
#        '/etc/glance/glance-api.conf' \
#        '/etc/glance/glance-registry.conf' \
# )
# BACKUP_DIR=~/backup
# mkdir -p $BACKUP_DIR
# for f in ${FILES[@]}
# do
#     D=$(dirname $f)
#     F=$(basename $f)
#     LOC=${BACKUP_DIR}/$D
#     mkdir -p $LOC
#     if [ -f $f ] && [ ! -f $LOC/$F ]; then
# 	/bin/cp -f $f $LOC/$F
#     fi
# done



