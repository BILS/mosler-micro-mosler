# -*-sh-*-

# Configuring iptables
# Remove the line
sed -i "/^-A INPUT -m state --state NEW -s {{ env['MGMT_CIDR']|replace('/','\/') }} -j ACCEPT/ d" /etc/sysconfig/iptables
# Insert it before the other line
sed -i "/^-A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT/ i \
-A INPUT -m state --state NEW -s {{ env['MGMT_CIDR']|replace('/','\/') }} -j ACCEPT" /etc/sysconfig/iptables
systemctl restart iptables

#############################################################

sed -i '/server supernode iburst/ d' /etc/chrony.conf
echo 'server supernode iburst' >> /etc/chrony.conf
systemctl enable chronyd.service
systemctl restart chronyd.service

#############################################################

# Creating NFS share
NFS_ROOT=/mnt
mkdir -p $NFS_ROOT
[ -d $NFS_ROOT/slurm ] && unlink $NFS_ROOT/slurm
[ -d $NFS_ROOT/data ] && unlink $NFS_ROOT/data
[ -d $NFS_ROOT/sw ] && unlink $NFS_ROOT/sw

ln -s /home/centos/{{ env['VAULT'] }}/data $NFS_ROOT/data
ln -s /home/centos/{{ env['VAULT'] }}/sw $NFS_ROOT/sw
ln -s /home/centos/{{ env['VAULT'] }}/slurm $NFS_ROOT/slurm

MM_PROJECTS=$NFS_ROOT/projects
mkdir -p $MM_PROJECTS
#rm -rf ${MM_PROJECTS}/ready

:> /etc/exports
echo "$NFS_ROOT/slurm {{ env['MGMT_CIDR'] }}(rw,sync,no_root_squash,no_all_squash,no_subtree_check)" >> /etc/exports
echo "$NFS_ROOT/data {{ env['MGMT_CIDR'] }}(rw,sync,no_root_squash,no_all_squash,no_subtree_check)" >> /etc/exports
echo "$NFS_ROOT/sw {{ env['MGMT_CIDR'] }}(rw,sync,no_root_squash,no_all_squash,no_subtree_check)" >> /etc/exports
echo "$MM_PROJECTS {{ env['MGMT_CIDR'] }}(rw,sync,no_root_squash,no_all_squash,no_subtree_check)" >> /etc/exports
#exportfs -ra

systemctl restart rpcbind
systemctl restart nfs-server
# systemctl restart nfs-lock
# systemctl restart nfs-idmap

##############################################################
# Settings
# uu_proxy was set up in the sync script
export http_proxy="http://uu_proxy:3128/"
#export https_proxy="https://uu_proxy:3128/"
export _JAVA_OPTIONS='-Dhttp.proxyHost=uu_proxy -Dhttp.proxyPort=3128 -Djava.net.preferIPv4Stack=true'

git config --global http.proxy http://uu_proxy:3128
git config --global https.proxy https://uu_proxy:3128

##############################################################
# Manta
# See: https://github.com/Illumina/manta
if [ ! -x /usr/local/bin/configManta.py ]; then
    MANTA_VERSION=1.0.0 # CAW requires 0.27.1
    if [ ! -d ${MM_PROJECTS}/manta/build ]; then
	rm -rf ${MM_PROJECTS}/manta
	git clone https://github.com/Illumina/manta.git ${MM_PROJECTS}/manta
	mkdir -p ${MM_PROJECTS}/manta/build # can't be run from its source directory
	pushd ${MM_PROJECTS}/manta/build
	export CC=/bin/cc
	export CXX=/bin/c++
	../configure
	popd
    fi
    make -C ${MM_PROJECTS}/manta/build install
    # touch ${MM_PROJECTS}/manta/build/ready
fi

##############################################################
# Strelka
# See: https://sites.google.com/site/strelkasomaticvariantcaller/home/strelka-workflow-installation
if [ ! -x /usr/local/bin/configureStrelkaWorkflow.pl ]; then
    STRELKA_VERSION=1.0.15 # required by CAW
    rm -rf ${MM_PROJECTS}/strelka_workflow-${STRELKA_VERSION}{,.tar.gz}
    curl -o ${MM_PROJECTS}/strelka_workflow-${STRELKA_VERSION}.tar.gz -L "https://sites.google.com/site/strelkasomaticvariantcaller/home/download/strelka_workflow-${STRELKA_VERSION}.tar.gz?attredirects=0&d=1"
    tar -xzf ${MM_PROJECTS}/strelka_workflow-${STRELKA_VERSION}.tar.gz -C ${MM_PROJECTS}
    pushd ${MM_PROJECTS}/strelka_workflow-${STRELKA_VERSION}
    ./configure --prefix=/usr/local
    popd
    make -C ${MM_PROJECTS}/strelka_workflow-${STRELKA_VERSION}
    # Run the demo. Require perl-Data-Dumper
    /usr/local/bin/demo/run_demo.bash
fi

##############################################################
# Samtools
SAMTOOLS_VERSION=1.3.1 # required by CAW
if [ ! -x $NFS_ROOT/sw/samtools/${SAMTOOLS_VERSION}/bin/samtools ]; then
    rm -f ${MM_PROJECTS}/samtools-${SAMTOOLS_VERSION}.tar.bz2
    curl -o ${MM_PROJECTS}/samtools-${SAMTOOLS_VERSION}.tar.bz2 -L https://github.com/samtools/samtools/releases/download/${SAMTOOLS_VERSION}/samtools-${SAMTOOLS_VERSION}.tar.bz2
    tar -xjf ${MM_PROJECTS}/samtools-${SAMTOOLS_VERSION}.tar.bz2 -C ${MM_PROJECTS}
    pushd ${MM_PROJECTS}/samtools-${SAMTOOLS_VERSION}
    ./configure --enable-plugins --enable-libcurl --prefix=$NFS_ROOT/sw/samtools/${SAMTOOLS_VERSION}/
    make all all-htslib
    make install install-htslib
    popd
fi

##############################################################
# Git project CAW
# See: https://github.com/SciLifeLab/CAW/
if [ ! -d ${MM_PROJECTS}/CAW ]; then
    git clone https://github.com/SciLifeLab/CAW.git ${MM_PROJECTS}/CAW
fi
rm -rf ${MM_PROJECTS}/CAW/work

##############################################################
touch ${MM_PROJECTS}/ready
