# -*-sh-*-

#############################################################
{% include 'openstack-common.jn2' %}

yum -y install nc nfs-utils

#############################################################
echo "Copying config files"
{% set files = [ 'add_user_to_project.sh',
		 'create_heat_template.sh',
		 'create_nfs_share.sh',
		 'create_project.sh',
		 'fix_proj.sh',
		 'get_vlan.sh',
		 'heat_add_compute.sh',
		 'import_user',
		 'nfs_san_check.sh',
		 'queue_responder',
		 'remove_project.sh',
		 'remove_stack.sh',
		 'sync_exporters',
		 'sync_grantfile',
		 'sync_tokenadmin',
		 'tenant-valid'
	       ] -%}
{% for file in files %}
rsync -a {{ env['VAULT'] }}/{{ file }}  /usr/local/bin/{{ file }}
chown root:root /usr/local/bin/{{ file }}
chmod 0755 /usr/local/bin/{{ file }}
{% endfor %}

{% set files = [ 'filsluss_cron_export',
		 'filsluss_cron_import',
		 'fix_hostdata',
		 'fix_userdata',
		 'project_gid',
		 'project_ips',
		 'project_members',
		 'remove_project.sh',
		 'setup_homedir.sh',
		 'thinlinc_proj_setup'
	       ] -%}
{% for file in files %}
rsync -a {{ env['VAULT'] }}/{{ file }}  /usr/local/sbin/{{ file }}
chown root:root /usr/local/sbin/{{ file }}
chmod 0755 /usr/local/sbin/{{ file }}
{% endfor %}

mkdir -p /usr/local/heat

{% set files = [ 'mosler-template-resources-computenode',
		 'mosler-template-resources-loginnode',
		 'mosler-template-resources-network',
		 'mosler-template-resources-private_net-only',
		 'mosler-template-resources-secgroups',
		 'mosler-template-resources-servicenode'
	       ] -%}
{% for file in files %}
rsync -a {{ env['VAULT'] }}/{{ file }} /usr/local/heat/{{ file }}
chmod 0755 /usr/local/heat/{{ file }}
{% endfor %}

{# 'mosler-template-parameters' is used in a different way, in provision.jn2 #}


echo "Configuring the Mosler permissions"
mkdir -p /etc/mosler

declare -A FILES
FILES=(\
['mosler_groups']='/etc/mosler/groups' \
['granfile']='/etc/mosler/granfile' \
['filsluss_exportmembers']='/etc/mosler/filsluss_exportmembers' \
['bils_tokenadmins']='/etc/mosler/bils_tokenadmins' \
)

for f in ${!FILES[@]}
do
    rsync -a --no-perms {{ env['VAULT'] }}/$f ${FILES[$f]}
    chown root:root ${FILES[$f]}
    chmod 644 ${FILES[$f]}
done
