#!/bin/sh

. /root/.keystonerc
PATH=/usr/local/sbin:/usr/local/bin:$PATH

imp=/meles/import/home

cd /meles || exit 1

for proj in *; do 

  # Project $proj is a valid project?
  if keystone tenant-get "$proj" 2>/dev/null >/dev/null; then

    # Make sure project directories are set up 

    mkdir -p "$proj/misc/etc"
    mkdir -p "$proj/misc/usr/local/slurm-state"
    mkdir -p "$proj/misc/sw/share/slurm/topolino/jobdetails"
    mkdir -p "$proj/misc/sw/share/slurm/topolino/uppmax_jobstats"
    mkdir -p "$proj/misc/var/log/slurm"
    mkdir -p "$proj/misc/sw/share/service"
    mkdir -p "$proj/proj"
    mkdir -p "$proj/home"
    mkdir -p "$proj/glob"

    chown 0.0 "$proj/misc/sw/share/service"
    cp -p /usr/local/service/service_stop "$proj/misc/sw/share/service/"

    # Preliminary solution to set slurm as owner and group owner of Slurm directories, lka as owner and staff as group owner to directory jobdetails
    chown 151.151 "$proj/misc/sw/share/slurm" "$proj/misc/sw/share/slurm/topolino" "$proj/misc/sw/share/slurm/topolino/uppmax_jobstats" "$proj/misc/usr/local/slurm-state" "$proj/misc/var/log/slurm"
    chown 40004.40000 "$proj/misc/sw/share/slurm/topolino/jobdetails"
    chmod g+s,g+w "$proj/misc/sw/share/slurm" "$proj/misc/sw/share/slurm/topolino"
    chmod g+s,o+rx "$proj/misc/var/log/slurm" "$proj/misc/sw/share/slurm/topolino/uppmax_jobstats"
    chmod g+s,o+rx "$proj/misc/sw/share/slurm/topolino/jobdetails"


    gid=`project_gid "$proj"`

    mkdir -p "$proj/proj/$proj"
    mkdir -p "$proj/proj/nobackup"
    mkdir -p "$proj/proj/${proj}_nobackup"
    test -h "$proj/proj/nobackup/$proj" || ln -s "/proj/${proj}_nobackup" "$proj/proj/nobackup/$proj"

    chgrp "$gid"  "$proj/proj/$proj"
    chgrp "$gid"  "$proj/proj/${proj}_nobackup"

    chmod g+rwx "$proj/proj/$proj"
    chmod g+rwx "$proj/proj/${proj}_nobackup"

    chmod g+s "$proj/proj/$proj"
    chmod g+s "$proj/proj/${proj}_nobackup"
 
    groupline="$proj:x:$gid:"
    : > "$proj/misc/etc/group.new"
    : > "$proj/misc/etc/passwd.new"


    users=''
    # Loop over all users of project
    for user in `project_members "$proj"`; do
        line=`passwd_line "$user"`

        echo $line >> "$proj/misc/etc/passwd.new"

        uid=`echo $line | sed -e 's/[^:]*:[^:]*://' -e 's/:.*//'`
        usergid=`echo $line | sed -e 's/[^:]*:[^:]*:[^:]*://' -e 's/:.*//'`

        echo "$user:x:$usergid:$user"  >> "$proj/misc/etc/group.new"

        users="${users}$user,"



        mkdir -p "$proj/home/$user"
        mkdir -p "$proj/glob/$user"

        mkdir -p "$imp/$user/$proj"
        touch "$imp/$user/$proj"
        touch "$imp/$user"

        if [ ! -L "$proj/home/$user/glob" ] ; then
                ln -s "/glob/$user" "$proj/home/$user/glob"
        fi

        /usr/local/sbin/setup_homedir.sh "$proj/home/$user/$p"  "$user" "$uid" "$usergid"       
        # Fix ownerships of directories

        chown "$uid"."$usergid" "$proj/home/$user"
        chown "$uid"."$usergid" "$proj/glob/$user"

        chown "$uid"."$gid" "$imp/$user/$proj"

        chown root.root "$imp/$user"

        if keystone --os-tenant-name "$proj" user-role-list --user "$user" | grep -q 'exporter' ; then
            # User has export permissions
            mkdir -p "$proj/proj/$proj/OUTBOX/$user"
            chown "$uid" "$proj/proj/$proj/OUTBOX/$user"
            chgrp "$gid" "$proj/proj/$proj/OUTBOX/$user"
            chmod 0700 "$proj/proj/$proj/OUTBOX/$user"
            chown root "$proj/proj/$proj/OUTBOX"
            chmod 0750 "$proj/proj/$proj/OUTBOX"

        else
            # If the user had export permissions earlier, make sure they're gone now.
            if [ -e "$proj/proj/$proj/OUTBOX/$user" ] ; then
                rm -rf "$proj/proj/$proj/OUTBOX/$user"
            fi

        fi

    # End loop over users    
    done

    groupline="${groupline}${users}"
    echo "$groupline" |sed -e 's/,$//' >> "$proj/misc/etc/group.new" 
    echo "docker:x:492:${users}" | sed -e 's/,$//' >> "$proj/misc/etc/group.new"

    mv "$proj/misc/etc/passwd.new" "$proj/misc/etc/passwd"
    mv "$proj/misc/etc/group.new" "$proj/misc/etc/group"


  # end test for valid projects
  fi
#end loop over projects
done

find "$imp/" -type d -ctime +1  -exec rmdir '{}' ';'


mkdir -p /meles/import/etc/

for p in passwd group; do
  cat */misc/etc/"$p" | sort -u > /meles/import/etc/"$p".new
  mv /meles/import/etc/"$p".new /meles/import/etc/"$p"
done

