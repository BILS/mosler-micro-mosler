#!/bin/bash

PATH=/usr/local/bin:/usr/local/sbin:$PATH

uid=`id -u`

if [ "$uid" -gt 0 ] ; then
  echo Please rerun as root.
  exit 1
fi

. /root/.keystonerc

cd /meles

tmpname=/tmp/queuer.$$

ls -1 | sort -R | while read proj; do
  if tenant-valid "$proj"; then

      nova --os-tenant-name "$proj" list | grep ERROR |while read a b c ; do nova delete $b; done
 
      timeout 25 ssh root@tos1 ssh -o 'StrictHostKeyChecking\ no' -i /root/.ssh/statuser_access statuser@"$proj"-login squeue -o '\"%t %P %C\"' > "$tmpname"  2>/dev/null </dev/null
      nodeswanted=`egrep -c '^PD (node|demo |devel)' "$tmpname"  `
      coreswanted=`grep '^PD [demov]*core' "$tmpname" | awk 'BEGIN { sum=0 } { sum += $3 } END { print sum }'`
      atleast=`grep '^PD [demov]*core' "$tmpname" | awk 'BEGIN { max=0 } { if ($3 > max) { max = $3 } } END { print max }' `
      
      #echo "$proj wants $nodeswanted nodes and $coreswanted cores (at least $atleast cores in the same node."
      
      if [ "$nodeswanted" -gt 0 -o "$coreswanted" -gt 0 ]; then
          # Jobs in queue.
          flavor=mosler.8cores
          mtype=8c
          
          if [ "$nodeswanted" -eq 0 ] ; then
              
              case "$atleast" in
                  5|6|7|8)
                      flavor=mosler.8cores
                      mtype=8c
                      ;;
                  3|4)
                      flavor=mosler.4cores
                      mtype=4c
                      ;;
                  2)
                      flavor=mosler.2cores
                      mtype=2c
                      ;;
                  1)
                      flavor=mosler.1core
                      mtype=1c
                      ;;
              esac
              
          fi
          
          if nova --os-tenant-name "$proj" list | fgrep compute_${mtype}_ | tr -d ' ' | fgrep -q 'SHUTOFF|-'; then
              # Project has a suitable machine, just not running.
              mid=`nova --os-tenant-name "$proj" list | fgrep compute_${mtype}_ | tr -d ' '| fgrep 'SHUTOFF|-' |tail -1 | cut -d'|' -f 2`

              nova start "$mid"
          else
              now=`date +%s`
              name="$proj-compute_${mtype}_$now"
              netid=`neutron net-show "$proj-private_net" | tr -d ' ' | fgrep '|id|' | cut -d'|' -f 3`
              
              nova --os-tenant-name "$proj" boot --security-groups "${proj}-mosler_default"  --flavor "$flavor" --image project-computenode-stable --nic net-id="$netid" "$name"
          fi
      else
          # No queue? Let's do some cleaning.
          if nova --os-tenant-name "$proj" list | grep 'compute' | tr -d ' ' | fgrep -q 'SHUTOFF|-'; then
              for mremove in `nova --os-tenant-name "$proj" list | grep 'compute' | tr -d ' '| fgrep 'SHUTOFF|-'  | cut -d'|' -f 2`; do 
                  echo "$mremove"
                  nova delete "$mremove"
              done  
          fi
      fi
  fi
  
done

rm -f "$tmpname"

