# -*-sh-*-

echo "Configuring iptables"
sed -i "/^-A INPUT -m state --state NEW -s {{ env['MGMT_CIDR']|replace('/','\/') }} -j ACCEPT/ d" /etc/sysconfig/iptables
# Insert it before the other line
sed -i "/^-A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT/ i \
-A INPUT -m state --state NEW -s {{ env['MGMT_CIDR']|replace('/','\/') }} -j ACCEPT" /etc/sysconfig/iptables
systemctl restart iptables


##############################################################
# Adding ntp1.it.uu.se. No DNS => ip only
sed -i "/server 130.238.15.1 iburst/ d" /etc/chrony.conf
echo "server 130.238.15.1 iburst" >> /etc/chrony.conf

systemctl enable chronyd.service
systemctl restart chronyd.service

##############################################################
# Mount the nfs share as /meles

mkdir -p {{ env['CAW_DATA'] }} {{ env['MM_PROJECTS'] }}

if mount | grep -q {{ env['CAW_DATA'] }} ;then umount {{ env['CAW_DATA'] }}; fi
if mount | grep -q {{ env['MM_PROJECTS'] }} ;then umount {{ env['MM_PROJECTS'] }}; fi
sleep 5

mount -t nfs storage:/mnt/data {{ env['CAW_DATA'] }} || exit 1
mount -t nfs storage:/mnt/projects {{ env['MM_PROJECTS'] }} || exit 1
sed -i -e '/storage:/ d' /etc/fstab
echo "storage:{{ env['NFS_ROOT'] }}/data {{ env['CAW_DATA'] }}  nfs   auto,noatime,nolock,bg,nfsvers=4,intr,tcp,actimeo=1800 0 0" >> /etc/fstab
echo "storage:{{ env['NFS_ROOT'] }}/projects {{ env['MM_PROJECTS'] }}  nfs   auto,noatime,nolock,bg,nfsvers=4,intr,tcp,actimeo=1800 0 0" >> /etc/fstab


##############################################################
# Munge and Slurm
# See: https://wiki.fysik.dtu.dk/niflheim/SLURM
for package in -plugins '' -devel -munge -perlapi -sjobexit -sjstat -torque -pam_slurm # -openlava -seff -slurmdbd -slurmdb-direct -sql 
do
    if ! rpm -q slurm${package} >/dev/null; then
	rpm -ivh /home/centos/{{ env['VAULT'] }}/slurm/slurm${package}-16.05.4-1.el7.centos.x86_64.rpm
    fi
done

# Nuke the logs
mkdir -p /var/log/{munge,slurm}
for log in munge/munged.log slurm/slurmctld.log  slurm/slurm_job{acct,comp}.log; do :> /var/log/$log; done
:> /var/log/munge/munged.log
chown -R munge:munge /var/log/munge
:> /var/log/slurm/slurmd.log
chown -R slurm:slurm /var/log/slurm


systemctl restart munge.service
systemctl restart slurmctld.service
# No need to add to iptables: ports 6817/udp 6817/tcp 6818/tcp 7321/tcp
systemctl enable munge.service
systemctl enable slurmctld.service

##############################################################
# Git project CAW
# See: https://github.com/SciLifeLab/CAW/
export http_proxy="{{ env['UU_PROXY'] }}"
git config --global http.proxy ${http_proxy}
git config --global https.proxy ${http_proxy/http/https}

# pre-processing. Nasty part that requires a lot of CPU and temporary disk space
# once we have the pre-processed reads, we run the remainder (variant call, finding mutations)
if [ ! -d {{ env['MM_PROJECTS'] }}/CAW ]; then
    git clone https://github.com/SciLifeLab/CAW.git {{ env['MM_PROJECTS'] }}/CAW
fi
rm -rf {{ env['MM_PROJECTS'] }}/CAW/work

rm -rf ~/.nextflow ~/.nextflow.log
rm -rf {{ env['MM_PROJECTS'] }}/CAW/.nextflow.history {{ env['MM_PROJECTS'] }}/CAW/.nextflow.log

# That'll be ok for all compute nodes, since CAW/bin is on an NFS share
# They are dead links on the supernode though
ln -s /usr/local/bwa-{{ env['BWA_VERSION'] }}/bin/* {{ env['MM_PROJECTS'] }}/CAW/bin/.
ln -s /usr/local/samtools-{{ env['SAMTOOLS_VERSION'] }}/bin/* {{ env['MM_PROJECTS'] }}/CAW/bin/.
ln -s /usr/local/strelka-{{ env['STRELKA_VERSION'] }}/bin/* {{ env['MM_PROJECTS'] }}/CAW/bin/.
ln -s /usr/local/manta-{{ env['MANTA_VERSION'] }}/bin/* {{ env['MM_PROJECTS'] }}/CAW/bin/.
# PATH already contains /usr/local/bin
cat > /etc/profile.d/mmrc.sh <<'EOF'
# micromosler defs

alias ls='ls -h'
alias la='ls -a'
alias lla='ll -a'

[[ "$PATH" =~ "/usr/local/bin" ]] || export PATH="/usr/local/bin:$PATH"; done

module () 
{ 
    return 0
}
export -f module
EOF

# pushd {{ env['MM_PROJECTS'] }}/CAW
# NXF_DEBUG=1 &&
#     nextflow run MultiFQtoVC.nf -c /home/centos/{{ env['VAULT'] }}/mm.config --sample data/tsv/sample.tsv
# popd

#NXF_DEBUG=1 && nextflow run MultiFQtoVC.nf -c /home/centos/vault/mm.config --sample data/tsv/sample.tsv
