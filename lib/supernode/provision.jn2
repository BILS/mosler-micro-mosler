# -*-sh-*-


echo "Configuring iptables"
sed -i "/^-A INPUT -m state --state NEW -s {{ env['MGMT_CIDR']|replace('/','\/') }} -j ACCEPT/ d" /etc/sysconfig/iptables
# Insert it before the other line
sed -i "/^-A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT/ i \
-A INPUT -m state --state NEW -s {{ env['MGMT_CIDR']|replace('/','\/') }} -j ACCEPT" /etc/sysconfig/iptables
systemctl restart iptables


##############################################################
# Adding ntp1.it.uu.se. No DNS => ip only
sed -i "/server 130.238.15.1 iburst/ d" /etc/chrony.conf
echo "server 130.238.15.1 iburst" >> /etc/chrony.conf

systemctl enable chronyd.service
systemctl restart chronyd.service

##############################################################
# Mount the nfs share as /meles
NFS_LOCATION=/meles
mkdir -p $NFS_LOCATION

if mount | grep -q $NFS_LOCATION ;then
    umount $NFS_LOCATION
else
    sleep 20 # wait a bit for the nfs server
fi

mount -t nfs storage:/nfs $NFS_LOCATION || exit 1 # Using 'storage' instead of {{ env['NFS_SERVER'] }}

if ! grep -q "storage:" /etc/fstab; then
    cat >> /etc/fstab <<EOF
storage:/nfs/mosler $NFS_LOCATION  nfs   auto,noatime,nolock,bg,nfsvers=4,intr,tcp,actimeo=1800 0 0
EOF
fi


##############################################################
# Settings
mkdir -p /usr/local/bin
[[ "$PATH" =~ "/usr/local/bin" ]] || export PATH=/usr/local/bin:$PATH
# uu_proxy was set up in the sync script
export http_proxy="http://uu_proxy:3128/"
export _JAVA_OPTIONS='-Dhttp.proxyHost=uu_proxy -Dhttp.proxyPort=3128 -Djava.net.preferIPv4Stack=true'
export GRADLE_OPTS=${_JAVA_OPTIONS}


##############################################################
#git config --global http.proxy http://uu_proxy:3128

##############################################################
# Gradle
GRADLE_VERSION=2.13
rm -rf gradle-${GRADLE_VERSION}*
curl -o gradle-${GRADLE_VERSION}-bin.zip -L https://services.gradle.org/distributions/gradle-${GRADLE_VERSION}-bin.zip
unzip gradle-${GRADLE_VERSION}-bin.zip
export GRADLE_HOME=$(pwd)/gradle-${GRADLE_VERSION}
[[ "$PATH" =~ "${GRADLE_HOME}/bin" ]] || export PATH=${GRADLE_HOME}/bin:$PATH

# Adding settings for HTTP and HTTPS proxy
[ -e ~/.gradle/gradle.properties ] && sed -i -e '/systemProp\.https\?\.proxy/ d' ~/.gradle/gradle.properties
echo "systemProp.http.proxyHost=uu_proxy" >> ~/.gradle/gradle.properties
echo "systemProp.http.proxyPort=3128" >> ~/.gradle/gradle.properties
echo "systemProp.https.proxyHost=uu_proxy" >> ~/.gradle/gradle.properties
echo "systemProp.https.proxyPort=3128" >> ~/.gradle/gradle.properties
echo 'systemProp.http.nonProxyHosts="uu_proxy|localhost"' >> ~/.gradle/gradle.properties

##############################################################
# Picard
# rm -f picard.tar.gz
# curl -o picard.tar.gz -L https://github.com/broadinstitute/picard/tarball/master
rm -rf picard
git clone https://github.com/broadinstitute/picard.git
pushd picard
trap popd EXIT
gradle shadowJar
# # Gradle is in the PATH. See above.
# gradle shadowJar
popd

##############################################################
# GIT LFS as RPM
curl -o git-lfs-1.4.1-1.el7.x86_64.rpm -L https://packagecloud.io/github/git-lfs/packages/el/7/git-lfs-1.4.1-1.el7.x86_64.rpm/download
yum -y install git-lfs-1.4.1-1.el7.x86_64.rpm # reinstall?

##############################################################
# GATK
rm -rf gatk
git clone https://github.com/broadinstitute/gatk.git
pushd gatk
trap popd EXIT
git lfs install
git lfs pull
gradle installAll
# gradle localJar
popd

##############################################################
# Manta
MANTA_VERSION=1.0.0 # CAW requires 0.27.1
rm -rf manta
git clone https://github.com/Illumina/manta.git
pushd manta
popd
mkdir ./build && pushd ./build # can't be run from its source directory
# export CC=/path/to/cc
# export CXX=/path/to/c++
../configure
make install
popd
popd

##############################################################
# Strelka
# from https://sites.google.com/site/strelkasomaticvariantcaller/home/strelka-workflow-installation
rm -f strelka.tar.gz
curl -o strelka.tar.gz -L https://sites.google.com/site/strelkasomaticvariantcaller/home/download/strelka_workflow-1.0.15.tar.gz?attredirects=0&d=1
rm -rf strelka_workflow
tar -xzf strelka.tar.gz
mv strelka_workflow-* strelka_workflow # Got lucky with the names
pushd strelka_workflow
./configure #--prefix=/usr/local/bin
make
popd

##############################################################
# NextFlow
curl -fsSL get.nextflow.io | bash
# Moving nextflow to /usr/local/bin
mv nextflow /usr/local/bin/.
chmod +x /usr/local/bin/nextflow

##############################################################
# Git project CAW
# Fix the ssh key so we don't use user/password combinations
# git clone https://github.com/SciLifeLab/CAW.git

