# -*-sh-*-

echo "Configuring iptables"
sed -i "/^-A INPUT -m state --state NEW -s {{ env['MGMT_CIDR']|replace('/','\/') }} -j ACCEPT/ d" /etc/sysconfig/iptables
# Insert it before the other line
sed -i "/^-A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT/ i \
-A INPUT -m state --state NEW -s {{ env['MGMT_CIDR']|replace('/','\/') }} -j ACCEPT" /etc/sysconfig/iptables
systemctl restart iptables


##############################################################
# Adding ntp1.it.uu.se. No DNS => ip only
sed -i "/server 130.238.15.1 iburst/ d" /etc/chrony.conf
echo "server 130.238.15.1 iburst" >> /etc/chrony.conf

systemctl enable chronyd.service
systemctl restart chronyd.service

##############################################################
# Mount the nfs share as /meles

SLURM_LOCATION=/mnt/slurm
CAW_DATA=/mnt/data
CAW_SW=/mnt/sw

mkdir -p $SLURM_LOCATION
mkdir -p $CAW_SW $CAW_DATA

if mount | grep -q $CAW_DATA ;then umount $CAW_DATA; fi
if mount | grep -q $CAW_SW ;then umount $CAW_SW; fi
if mount | grep -q $SLURM_LOCATION ;then umount $SLURM_LOCATION; fi
sleep 5

mount -t nfs storage:/nfs/slurm $SLURM_LOCATION || exit 1
mount -t nfs storage:/nfs/data $CAW_DATA || exit 1
mount -t nfs storage:/nfs/sw $CAW_SW || exit 1
sed -i -e '/storage:/ d' /etc/fstab
echo "storage:/nfs/data $CAW_DATA  nfs   auto,noatime,nolock,bg,nfsvers=4,intr,tcp,actimeo=1800 0 0" >> /etc/fstab
echo "storage:/nfs/sw $CAW_SW  nfs   auto,noatime,nolock,bg,nfsvers=4,intr,tcp,actimeo=1800 0 0" >> /etc/fstab
echo "storage:/nfs/slurm $SLURM_LOCATION  nfs   auto,noatime,nolock,bg,nfsvers=4,intr,tcp,actimeo=1800 0 0" >> /etc/fstab


##############################################################
# Settings
mkdir -p /usr/local/bin
[[ "$PATH" =~ "/usr/local/bin" ]] || export PATH=/usr/local/bin:$PATH
# uu_proxy was set up in the sync script
export http_proxy="http://uu_proxy:3128/"
#export https_proxy="https://uu_proxy:3128/"
export _JAVA_OPTIONS='-Dhttp.proxyHost=uu_proxy -Dhttp.proxyPort=3128 -Djava.net.preferIPv4Stack=true'
export GRADLE_OPTS=${_JAVA_OPTIONS}

git config --global http.proxy http://uu_proxy:3128
git config --global https.proxy https://uu_proxy:3128

# ##############################################################
# # Manta
# # See: https://github.com/Illumina/manta
# #MANTA_VERSION=1.0.0 # CAW requires 0.27.1
# #if [ ! -x /usr/local/bin/manta ]; then
# if [ ! -d manta/build ]; then
#     git clone https://github.com/Illumina/manta.git
#     mkdir -p manta/build # can't be run from its source directory
#     pushd manta/build
#     export CC=/bin/cc
#     export CXX=/bin/c++
#     ../configure
#     popd
# fi
# make -C manta/build install
# #fi

##############################################################
# Strelka
# See: https://sites.google.com/site/strelkasomaticvariantcaller/home/strelka-workflow-installation
STRELKA_VERSION=1.0.15 # required by CAW
if [ ! -d strelka_workflow-${STRELKA_VERSION} ]; then
    rm -f strelka_workflow-${STRELKA_VERSION}.tar.gz
    curl -o strelka_workflow-${STRELKA_VERSION}.tar.gz -L "https://sites.google.com/site/strelkasomaticvariantcaller/home/download/strelka_workflow-${STRELKA_VERSION}.tar.gz?attredirects=0&d=1"
    tar -xzf strelka_workflow-${STRELKA_VERSION}.tar.gz
    pushd strelka_workflow-${STRELKA_VERSION}
    ./configure #--prefix=/usr/local/bin
    popd
fi
make -C strelka_workflow-${STRELKA_VERSION}

##############################################################
# Munge and Slurm
# See: https://wiki.fysik.dtu.dk/niflheim/SLURM

# Test if installed, since rpm -Uvh returns an exit status of 1
pushd /mnt/slurm
for package in slurm*.rpm
do
    if ! rpm -q ${package%.rpm} > /dev/null ; then 
	rpm -ivh $package
    fi
done
popd

systemctl enable munge
systemctl restart munge
systemctl enable slurmctld.service
systemctl restart slurmctld.service
# No need to add to iptables: ports 6817/udp 6817/tcp 6818/tcp 7321/tcp

##############################################################
# NextFlow
# See: https://www.nextflow.io/
curl -fsSL get.nextflow.io | bash
# Moving nextflow to /usr/local/bin
mv -f nextflow /usr/local/bin/.
chmod +x /usr/local/bin/nextflow


##############################################################
# Git project CAW
# See: https://github.com/SciLifeLab/CAW/
if [ ! -d CAW ]; then
    git clone https://github.com/SciLifeLab/CAW.git
fi

# pre-processing. Nasty part that requires a lot of CPU and temporary disk space
# once we have the pre-processed reads, we run the remainder (variant call, finding mutations)

pushd CAW

# in /root/.bashrc: function module () { return 0; }

rsync -a --no-perms /home/centos/{{ env['VAULT'] }}/mm.config config/.

# nextflow run MultiFQtoVC.nf -c config/mm.config --sample data/tsv/sample.tsv

popd
