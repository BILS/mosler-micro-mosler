# -*-sh-*-

echo "Configuring iptables"
sed -i "/^-A INPUT -m state --state NEW -s {{ env['MGMT_CIDR']|replace('/','\/') }} -j ACCEPT/ d" /etc/sysconfig/iptables
# Insert it before the other line
sed -i "/^-A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT/ i \
-A INPUT -m state --state NEW -s {{ env['MGMT_CIDR']|replace('/','\/') }} -j ACCEPT" /etc/sysconfig/iptables
systemctl restart iptables


##############################################################
# Adding ntp1.it.uu.se. No DNS => ip only
sed -i "/server 130.238.15.1 iburst/ d" /etc/chrony.conf
echo "server 130.238.15.1 iburst" >> /etc/chrony.conf

systemctl enable chronyd.service
systemctl restart chronyd.service

##############################################################
# Mount the nfs share as /meles

SLURM_LOCATION=/mnt/slurm
CAW_DATA=/mnt/data
CAW_SW=/mnt/sw
MM_PROJECTS=/mnt/projects

mkdir -p $SLURM_LOCATION $CAW_SW $CAW_DATA $MM_PROJECTS

if mount | grep -q $CAW_DATA ;then umount $CAW_DATA; fi
if mount | grep -q $CAW_SW ;then umount $CAW_SW; fi
if mount | grep -q $SLURM_LOCATION ;then umount $SLURM_LOCATION; fi
if mount | grep -q $MM_PROJECTS ;then umount $MM_PROJECTS; fi
sleep 5

mount -t nfs storage:/mnt/slurm $SLURM_LOCATION || exit 1
mount -t nfs storage:/mnt/data $CAW_DATA || exit 1
mount -t nfs storage:/mnt/sw $CAW_SW || exit 1
mount -t nfs storage:/mnt/projects $MM_PROJECTS || exit 1
sed -i -e '/storage:/ d' /etc/fstab
echo "storage:/mnt/data $CAW_DATA  nfs   auto,noatime,nolock,bg,nfsvers=4,intr,tcp,actimeo=1800 0 0" >> /etc/fstab
echo "storage:/mnt/sw $CAW_SW  nfs   auto,noatime,nolock,bg,nfsvers=4,intr,tcp,actimeo=1800 0 0" >> /etc/fstab
echo "storage:/mnt/slurm $SLURM_LOCATION  nfs   auto,noatime,nolock,bg,nfsvers=4,intr,tcp,actimeo=1800 0 0" >> /etc/fstab
echo "storage:/mnt/projects $MM_PROJECTS  nfs   auto,noatime,nolock,bg,nfsvers=4,intr,tcp,actimeo=1800 0 0" >> /etc/fstab


##############################################################
# Munge and Slurm
# See: https://wiki.fysik.dtu.dk/niflheim/SLURM
for package in -plugins '' -devel -munge -perlapi -sjobexit -sjstat -torque -pam_slurm # -openlava -seff -slurmdbd -slurmdb-direct -sql 
do
    if ! rpm -q slurm${package} >/dev/null; then
	rpm -ivh /mnt/slurm/slurm${package}-16.05.4-1.el7.centos.x86_64.rpm
    fi
done

# Nuke the logs
mkdir -p /var/log/{munge,slurm}
for log in munge/munged.log slurm/slurmctld.log  slurm/slurm_job{acct,comp}.log; do :> /var/log/$log; done
:> /var/log/munge/munged.log
chown -R munge:munge /var/log/munge
:> /var/log/slurm/slurmd.log
chown -R slurm:slurm /var/log/slurm


systemctl restart munge.service
systemctl restart slurmctld.service
# No need to add to iptables: ports 6817/udp 6817/tcp 6818/tcp 7321/tcp
systemctl enable munge.service
systemctl enable slurmctld.service

##############################################################
# pre-processing. Nasty part that requires a lot of CPU and temporary disk space
# once we have the pre-processed reads, we run the remainder (variant call, finding mutations)

##############################################################
# NextFlow
# See: https://www.nextflow.io/
if [ ! -x $CAW_SW/nextflow ]; then
    curl -fsSL get.nextflow.io | bash
    # Moving nextflow to /usr/local/bin
    mv -f nextflow $CAW_SW/.
    chmod +x $CAW_SW/nextflow
fi

export MM_PROJECTS
function wait_for_CAW {
    local -i t=${1:-30} # default: 30 seconds, well...if you don't count the backoff...
    local -i backoff=1
    local -i stride=20
    while (( t > 0 )) ; do
	echo -e "Time left: $t"
	[ -e ${MM_PROJECTS}/ready ] && return 0
	(( t-=backoff ))
	sleep $backoff
        if (( (t % stride) == 0 )); then (( backoff*=2 )); fi
    done
    exit 1
}
wait_for_CAW 2400 #40min

# in /root/.bashrc: function module () { return 0; }
#rsync -a --no-perms /home/centos/{{ env['VAULT'] }}/mm.config ${MM_PROJECTS}/CAW/config/.

#[[ "$PATH" =~ "$CAW_SW" ]] || export PATH=$CAW_SW:$PATH

# pushd ${MM_PROJECTS}/CAW
# NXF_DEBUG=1 &&
#     $CAW_SW/nextflow run MultiFQtoVC.nf -c /home/centos/{{ env['VAULT'] }}/mm.config --sample data/tsv/sample.tsv
# popd

