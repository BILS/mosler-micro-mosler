- name: NFS Support
  hosts: nfs
  tasks:
    - shell: echo "todo"
    
- name: LDAP
  hosts: ldap
  tasks:
    - lineinfile: dest=/etc/sysconfig/iptables state=present line='-A INPUT -m state --state NEW -m tcp -p tcp --dport 389 -j ACCEPT' insertbefore='^-A INPUT -m state --state NEW .*'
    - copy:   src={{ mm_home }}/configs/ldap_helper.sh dest=/root/ldap_helper.sh
    - shell: chmod a+x /root/ldap_helper.sh 
    - shell: /root/ldap_helper.sh
     

- name: OpenStack configuration
  hosts: openstack
  tasks:
    - service: name=openvswitch state=started
    - lineinfile: dest=/etc/sysconfig/iptables state=present line='-A INPUT -m state --state NEW -s 172.25.8.0/24 -j ACCEPT' insertbefore='^-A INPUT -m state --state NEW .*'
    - service: name=iptables state=restarted
    - copy: src={{ mm_home }}/configs/keystonerc dest=/root/.keystonerc
# Supernode needs to reach everywhere
#    - copy: src={{ lookup('env','HOME') }}/.ssh/id_rsa dest=/root/.ssh/id_rsa



- name: Controller specials
  hosts: openstack-controller
  tasks:
    - file: path=/root/bin state=directory
    - name: Copying config files
      copy: src={{ mm_home }}/configs/{{ item.src }} dest={{ item.dst }}
      with_items:
        - { src: 'neutron.conf',           dst: '/etc/neutron/neutron.conf'                               }
        - { src: 'keystone.conf',          dst: '/etc/keystone/keystone.conf'                             }
        - { src: 'plugin.ini',             dst: '/etc/neutron/plugin.ini'                                 }
        - { src: 'ml2.ini',                dst: '/etc/neutron/plugins/ml2/ml2.ini'                        }
        - { src: 'ovs_neutron_plugin.ini', dst: '/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini' }
        - { src: 'nova.conf',              dst: '/etc/nova/nova.conf'                                     }
        - { src: 'glance-api.conf',        dst: '/etc/glance/glance-api.conf'                             }
        - { src: 'glance-registry.conf',   dst: '/etc/glance/glance-registry.conf'                        }
        - { src: 'heat.conf',              dst: '/etc/heat/heat.conf'                                     }
        - { src: 'local_settings',         dst: '/etc/openstack-dashboard/local_settings'                 }
        - { src: 'openstack_helper.sh',    dst: '/root/bin/openstack_helper.sh'                           }

    - shell: chmod 0755 /root/bin/openstack_helper.sh
    - name: Running the openstack helper
      shell: /root/bin/openstack_helper.sh  2>/tmp/oserr >/tmp/osout

    - name: Adding the images to Glance
      shell: . /root/.keystonerc && glance image-create --file /tmp/mosler-images/{{ item }} --disk-format qcow2 --container-format bare  --name "project-computenode-stable" --is-public True
      with_items:
        - project-computenode-stable 
        - project-loginnode-stable
        - topolino-q-stable

    # - name: Removing the image files
    #   shell: rm /tmp/mosler-images/{{ item }}
    #   with_items:
    #     - project-computenode-stable 
    #     - project-loginnode-stable
    #     - topolino-q-stable


- name: OpenStack networking
  hosts: networking-node
  tasks:
    - name: system config
      lineinfile: dest=/etc/sysctl.conf regexp={{item.regexp}} line={{item.line}}
      with_items:
        - { regexp: '^\s*net.ipv4.ip_forward\s*=.*$',                 line: 'net.ipv4.ip_forward=1' }
        - { regexp: '^\s*net.ipv4.conf.all.rp_filter\s*=.*$',         line: 'net.ipv4.conf.all.rp_filter=0' }
        - { regexp: '^\s*net.ipv4.conf.default.rp_filter\s*=.*$',     line: 'net.ipv4.conf.default.rp_filter=0' }
        - { regexp: '^\s*net.bridge.bridge-nf-call-arptables\s*=.*$', line: 'net.bridge.bridge-nf-call-arptables=1' }
        - { regexp: '^\s*net.bridge.bridge-nf-call-iptables\s*=.*$',  line: 'net.bridge.bridge-nf-call-iptables=1' }
        - { regexp: '^\s*net.bridge.bridge-nf-call-ip6tables\s*=.*$', line: 'net.bridge.bridge-nf-call-ip6tables=1' }

    - name: Copying config files
      copy: src={{ mm_home }}/configs/{{ item.src }} dest={{ item.dst }}
      with_items:
        - { src: 'neutron.conf',           dst: '/etc/neutron/neutron.conf'                               }
        - { src: 'plugin.ini',             dst: '/etc/neutron/plugin.ini'                                 }
        - { src: 'ml2.ini',                dst: '/etc/neutron/plugins/ml2/ml2.ini'                        }
        - { src: 'ovs_neutron_plugin.ini', dst: '/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini' }

    - name: Starting OpenVSwitch
      service: name=openvswitch enabled=yes state=started
    - name: Creating the OVS bridge
      shell: ovs-vsctl add-br br-eth1 || true
    - name: Adding eth1 to the OVS bridge
      shell: ovs-vsctl add-port br-eth1 eth1|| true
    - name: Starting Neutron services
      service: name={{ item }} enabled=yes state=started
      with_items:
        - neutron-dhcp-agent
        - neutron-l3-agent
        - neutron-openvswitch-agent
        - neutron-metadata-agent
        - neutron-ovs-cleanup

- name: OpenStack compute
  hosts: openstack-compute
  tasks:
    - name: system config
      lineinfile: dest=/etc/sysctl.conf regexp={{item.regexp}} line={{item.line}}
      with_items:
        - { regexp: '^\s*net.ipv4.ip_forward\s*=.*$',                 line: 'net.ipv4.ip_forward=1' }
        - { regexp: '^\s*net.ipv4.conf.all.rp_filter\s*=.*$',         line: 'net.ipv4.conf.all.rp_filter=0' }
        - { regexp: '^\s*net.ipv4.conf.default.rp_filter\s*=.*$',     line: 'net.ipv4.conf.default.rp_filter=0' }
        - { regexp: '^\s*net.bridge.bridge-nf-call-arptables\s*=.*$', line: 'net.bridge.bridge-nf-call-arptables=1' }
        - { regexp: '^\s*net.bridge.bridge-nf-call-iptables\s*=.*$',  line: 'net.bridge.bridge-nf-call-iptables=1' }
        - { regexp: '^\s*net.bridge.bridge-nf-call-ip6tables\s*=.*$', line: 'net.bridge.bridge-nf-call-ip6tables=1' }

    - name: Copying config files
      copy: src={{ mm_home }}/configs/{{ item.src }} dest={{ item.dst }}
      with_items:
        - { src: 'neutron.conf',           dst: '/etc/neutron/neutron.conf'                               }
        - { src: 'plugin.ini',             dst: '/etc/neutron/plugin.ini'                                 }
        - { src: 'ml2.ini',                dst: '/etc/neutron/plugins/ml2/ml2.ini'                        }
        - { src: 'ovs_neutron_plugin.ini', dst: '/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini' }
        - { src: 'nova.conf',              dst: '/etc/nova/nova.conf'                                     }

    - name: Starting OpenVSwitch
      service: name=openvswitch enabled=yes state=started
    - name: Creating the OVS bridge
      shell: ovs-vsctl add-br br-eth1 || true
    - name: Adding eth1 to the OVS bridge
      shell: ovs-vsctl add-port br-eth1 eth1|| true
    - name: Starting Nova and Neutron agents
      service: name={{ item }} enabled=yes
      with_items:
        - neutron-openvswitch-agent
        - openstack-nova-compute
        
- name: Supernode 
  hosts: supernode
  tasks:
    - name: Copying mosler config files
      copy: src={{ mosler_home }}/supernode/{{ item }} dest=/usr/local/bin/
      with_items:
        - fix_proj.sh
        - import_user
        - passwd_line
        - queue_responder
        - remove_stack.sh
        - sync_exporters
        - sync_grantfile
        - tenant-valid
        - uppmax-links.sh
        - uppmax-sync.sh
    - copy: src={{ mosler_home }}/supernode/{{ item }} dest=/usr/local/sbin/ mode=0755
      with_items:
        - project_gid
        - project_ips
        - project_members
        - refreshimage
        - setup_homedir.sh
        - thinlinc_proj_setup
    - copy: src={{ mosler_home }}/supernode/{{ item }} dest=/usr/local/bin/ mode=0755
      with_items:
        - create_project.sh
        - create_heat_template.sh
        - create_omd_config.sh
        - get_vlan.sh
        - heat_add_compute.sh

    - copy: src={{ mm_home }}/configs/{{ item }} dest=/usr/local/bin/ mode=0755
      with_items:
        - create_nfs_share.sh
        - nfs_san_check.sh

    - file: path=/root/bin state=directory
    - copy: src={{ mm_home }}/configs/public-net-helper.sh dest=/root/bin/ mode=0755

    - file: path=/usr/local/heat state=directory
    - copy: src={{ mm_home }}/configs/{{ item }} dest=/usr/local/heat/ mode=0755
      with_items:
        - mosler-template-resources-private_net-only
        - mosler-template-resources-network
        - mosler-template-resources-secgroups
        - mosler-template-resources-loginnode
        - mosler-template-resources-servicenode
        - mosler-template-parameters

    - name: Running the public net helper
      shell: /root/bin/public-net-helper.sh


- name: ThinLinc
  hosts: thinlinc-master
  tasks:
    - copy: src={{ tl_home }} dest=/tmp/tl/
    - copy: src={{ mm_home }}/configs/tl_answers dest=/tmp/tl/
    - shell: yum -y install /tmp/tl/*x86_64.rpm /tmp/tl/*noarch.rpm || true
    - shell: /opt/thinlinc/sbin/tl-setup -a /tmp/tl/tl_answers || true
    - lineinfile: dest=/opt/thinlinc/etc/conf.d/webaccess.hconf regexp='^listen=.*$' line='listen=443'
