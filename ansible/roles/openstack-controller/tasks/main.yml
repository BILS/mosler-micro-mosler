- name: Copying misc packages
  copy: src={{ mosler_misc }} dest=/tmp/misc/

- name: Openstack utils and more
  yum: pkg={{ item }} state=present
  with_items:
    - openstack-dashboard
    - openstack-keystone
    - openstack-heat-engine
    - openstack-heat-api
    - openstack-heat-api-cfn
    - openstack-glance
    - memcached
    # - openstack-nova
    # - openstack-neutron
    # - openstack-neutron-ml2
    # - openstack-neutron-openvswitch
    
- name: Openstack Mosler dashboard
  yum: pkg={{ item }} state=present
  with_items:
    - /tmp/misc/Django14-1.4.21-1.el6.noarch.rpm
    - /tmp/misc/mosler-dashboard-2-5.i386.rpm
    - /tmp/misc/nginx-1.8.1-1.el6.ngx.x86_64.rpm

- name: Copying config files
  copy: src={{ mm_home }}/configs/{{ item.src }} dest={{ item.dst }}
  with_items:
    - { src: 'neutron.conf',           dst: '/etc/neutron/neutron.conf'                               }
    - { src: 'keystone.conf',          dst: '/etc/keystone/keystone.conf'                             }
    - { src: 'plugin.ini',             dst: '/etc/neutron/plugin.ini'                                 }
    - { src: 'ml2.ini',                dst: '/etc/neutron/plugins/ml2/ml2.ini'                        }
    - { src: 'ovs_neutron_plugin.ini', dst: '/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini' }
    - { src: 'nova.conf',              dst: '/etc/nova/nova.conf'                                     }
    - { src: 'glance-api.conf',        dst: '/etc/glance/glance-api.conf'                             }
    - { src: 'glance-registry.conf',   dst: '/etc/glance/glance-registry.conf'                        }
    - { src: 'heat.conf',              dst: '/etc/heat/heat.conf'                                     }
    - { src: 'local_settings',         dst: '/etc/openstack-dashboard/local_settings'                 }

- name: Memcached service
  service: name=memcached enabled=yes state=restarted

- name: Preparing the databases
  shell: su -s /bin/sh -c '{{ item.cmd }}' {{ item.user }}
  when: db_ready
  with_items:
    - { cmd: "keystone-manage db_sync", user: 'keystone' }
    - { cmd: "glance-manage db_sync",   user: 'glance'   }
    - { cmd: "nova-manage db sync",     user: 'nova'     }
    - { cmd: "heat-manage db_sync",     user: 'heat'     }
    - { cmd: "neutron-db-manage --config-file /etc/neutron/neutron.conf  --config-file /etc/neutron/plugin.ini upgrade 5ac1c354a051", user: 'neutron' }

- name: Keystone service
  service: name=openstack-keystone enabled=yes state=restarted
  register: keystone_started

- name: Keystone roles
  shell: keystone role-create --name={{ item }}
  when: keystone_started
  environment:
    OS_SERVICE_TOKEN: 0123456789abcdef0123456789abcdef
    OS_SERVICE_ENDPOINT: http://openstack-controller:35357/v2.0
  with_items:
    - admin
    - service
    # - _member_ # already created by 'keystone-manage db_sync'

- name: Keystone tenants
  shell: keystone tenant-create --name={{ item.name }} --description='{{ item.desc }}'
  environment:
    OS_SERVICE_TOKEN: 0123456789abcdef0123456789abcdef
    OS_SERVICE_ENDPOINT: http://openstack-controller:35357/v2.0
  when: keystone_started
  with_items:
    - { name: 'admin',    desc: "Admin Tenant"   }
    - { name: 'services', desc: "Service Tenant" }

- name: Keystone roles attribution
  shell: keystone user-role-add --user={{ item.user }} --tenant={{ item.tenant }} --role={{ item.role }}
  environment:
    OS_SERVICE_TOKEN: 0123456789abcdef0123456789abcdef
    OS_SERVICE_ENDPOINT: http://openstack-controller:35357/v2.0
  when: keystone_started
  with_items:
    - { user: 'admin',    tenant: 'admin',    role: 'admin'    }
    - { user: 'admin',    tenant: 'admin',    role: '_member_' }
    - { user: 'keystone', tenant: 'services', role: 'admin'    }
    - { user: 'nova',     tenant: 'services', role: 'admin'    }
    - { user: 'neutron',  tenant: 'services', role: 'admin'    }
    - { user: 'glance',   tenant: 'services', role: 'admin'    }
    - { user: 'heat',     tenant: 'services', role: 'admin'    }
        
- name: Keystone service creation
  shell: keystone service-create --name={{ item.name }} --type={{ item.type }} --description="{{ item.desc }}"
  environment:
    OS_SERVICE_TOKEN: 0123456789abcdef0123456789abcdef
    OS_SERVICE_ENDPOINT: http://localhost:35357/v2.0
  when: keystone_started
  with_items:
    - { name: 'keystone', type: 'identity',       desc: 'OpenStack Identity'           }
    - { name: 'glance',   type: 'image',          desc: 'OpenStack Image Service'      }
    - { name: 'nova',     type: 'compute',        desc: 'OpenStack Compute'            }
    - { name: 'neutron',  type: 'network',        desc: 'OpenStack Networking'         }
    - { name: 'heat',     type: 'orchestration',  desc: 'Orchestration'                }
    - { name: 'heat-cfn', type: 'cloudformation', desc: 'Orchestration CloudFormation' }

- name: Keystone endpoints creation
  shell: keystone endpoint-create --service-id=$(keystone service-list | awk '/ {{ item.service }} / {print $2}') --publicurl=http://openstack-controller:{{ item.public }} --internalurl=http://openstack-controller:{{ item.internal }} --adminurl=http://openstack-controller:{{ item.admin }}
  environment:
    OS_SERVICE_TOKEN: 0123456789abcdef0123456789abcdef
    OS_SERVICE_ENDPOINT: http://localhost:35357/v2.0
  when: keystone_started
  with_items:
    - { service: 'identity',       public: '5000/v2.0',               internal: '5000/v2.0',               admin: '35357/v2.0'              }
    - { service: 'image',          public: '9292',                    internal: '9292',                    admin: '9292'                    }
    - { service: 'compute',        public: '8774/v2/%\(tenant_id\)s', internal: '8774/v2/%\(tenant_id\)s', admin: '8774/v2/%\(tenant_id\)s' }
    - { service: 'network',        public: '9696',                    internal: '9696',                    admin: '9696'                    }
    - { service: 'orchestration',  public: '8004/v1/%\(tenant_id\)s', internal: '8004/v1/%\(tenant_id\)s', admin: '8004/v1/%\(tenant_id\)s' }
    - { service: 'cloudformation', public: '8000/v1',                 internal: '8000/v1',                 admin: '8000/v1'                 }


- name: Starting Openstack Services
  service: name={{ item }} enabled=yes state=restarted
  with_items:
    - openstack-heat-api
    - openstack-heat-api-cfn
    - openstack-heat-engine
    - openstack-nova-api
    - openstack-nova-scheduler
    - openstack-nova-conductor
    - openstack-glance-api
    - neutron-server
    - openstack-glance-registry
    - httpd
  register: openstack_services

- name: Removing any old image from Glance
  shell: rm -rf /var/lib/glance/images/*

- name: Adding the images to Glance
  when: openstack_services
  shell: . /root/.keystonerc && glance image-create --copy-from {{ mosler_images_url }}/{{ item }} --disk-format qcow2 --container-format bare  --name "{{ item }}" --is-public True
  with_items:
    - project-computenode-stable 
    - project-loginnode-stable
    - topolino-q-stable

- name: Removing existing Mosler flavors
  when: openstack_services
  shell: . /root/.keystonerc && (nova flavor-list | awk '/ mosler\./ {print $2}' | while read flavor; do nova flavor-delete $flavor; done)

- name: Adding Mosler flavors
  when: openstack_services
  shell: . /root/.keystonerc && nova flavor-create {{ item }}
  with_items:
    - mosler.1core auto 500 10 1
    - mosler.2cores auto 500 10 1
    - mosler.4cores auto 500 10 1
    - mosler.8cores auto 500 10 1
    - mosler.16cores auto 500 10 1

- shell: . /root/.keystonerc && nova aggregate-create service-and-login serv-login
  ignore_errors: true
- shell: . /root/.keystonerc && nova aggregate-add-host service-and-login compute1.novalocal
  ignore_errors: true
